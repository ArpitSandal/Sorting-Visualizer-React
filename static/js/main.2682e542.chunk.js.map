{"version":3,"sources":["components/Bars.js","Sorting-algorithms/BubbleSort.js","Sorting-algorithms/InsertionSort.js","Sorting-algorithms/QuickSort.js","Sorting-algorithms/MergeSort.js","App.js","index.js"],"names":["Bars","props","styles","height","style","className","my","animation","BubbleSort","arr","i","length","j","push","InsertionSort","key","Sort","st","en","pivot","inx","Partition","QuickSort","nextGap","gap","Math","floor","ceil","swap","temp","mergeSort","s","e","mid","start","end","inPlaceMerge","MergeSort","App","state","noofbars","speed","min","max","random","colcheck","bararr","document","getElementsByClassName","backgroundColor","myarr","this","genreateRandomNumber","setState","elm","getElementById","parseInt","value","getrandomArray","sortedarr","slice","sort","a","b","checkSorted","disabled","h1","h2","color","setTimeout","background","animateSort","barsheight","map","val","col","onClick","type","insertionSort","bubbleSort","quickSort","String","id","onInput","toggleSliderBars","Component","Main","reactDom","render"],"mappings":"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","file":"static/js/main.2682e542.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Bars(props){\r\n\r\n    const styles={\r\n        height: `${props.height}px`,\r\n    }\r\n    return (\r\n        <div style={styles} className={props.my}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bars","const animation = [];\r\n\r\nfunction BubbleSort(arr) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    for (let j = 0; j < arr.length - i - 1; j++) {\r\n      if (arr[j] > arr[j + 1]) {\r\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\r\n        animation.push([j, j + 1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return animation;\r\n}\r\n\r\nexport default BubbleSort;\r\n","const animation=[];\r\n\r\nfunction InsertionSort(arr){\r\n    let key,j;\r\n    for(let i=1; i<arr.length; i++){\r\n        j=i-1;\r\n        key=arr[i];  //key is in unsorted array\r\n        while(j>=0 && key<arr[j]){\r\n            [arr[j+1],arr[j]]=[arr[j],arr[j+1]]\r\n            animation.push([j,j+1]);\r\n            j--;\r\n        }\r\n    }\r\n    \r\n    return animation;\r\n}\r\n\r\nexport default InsertionSort;","let animation = [];\r\n\r\nfunction Partition(arr, st, en) {\r\n  let pivot = arr[en]; //choosing pivot as last element\r\n  let inx = st;\r\n  for (let i = st; i < en; i++) {\r\n    //from st-->en-1\r\n    if (arr[i] <= pivot) {\r\n      animation.push([inx, i, en]);  // the elements to be swapped and pivot element\r\n      [arr[i], arr[inx]] = [arr[inx], arr[i]];\r\n      inx++;\r\n    }\r\n  }\r\n  animation.push([inx, en, en]);\r\n  [arr[inx], arr[en]] = [arr[en], arr[inx]];\r\n  return inx;\r\n}\r\n\r\nfunction Sort(arr, st, en) {\r\n  if (st >= en) return;\r\n  let pivot = Partition(arr, st, en);\r\n  Sort(arr, st, pivot - 1);\r\n  Sort(arr, pivot + 1, en);\r\n}\r\n\r\nfunction QuickSort(arr) {\r\n  Sort(arr, 0, arr.length - 1);\r\n\r\n  return animation;\r\n}\r\n\r\nexport default QuickSort;\r\n","let animation = [];\r\n\r\nfunction nextGap(gap)\r\n{\r\n\tif (gap <= 1)\r\n\t\t\treturn 0;\r\n\t\treturn Math.floor(Math.ceil(gap / 2.0));\r\n}\r\n\r\n// Function for swapping\r\nfunction swap(arr,i,j)\r\n{\r\n    animation.push([i,j]);\r\n\tlet temp = arr[i];\r\n\t\tarr[i] = arr[j];\r\n\t\tarr[j] = temp;\r\n}\r\n\r\nfunction inPlaceMerge(arr,start,end)\r\n{\r\n\tlet gap = end - start + 1;\r\n\t\tfor (gap = nextGap(gap); gap > 0;\r\n\t\t\tgap = nextGap(gap)) {\r\n\t\t\tfor (let i = start; i + gap <= end; i++) {\r\n\t\t\t\tlet j = i + gap;\r\n\t\t\t\tif (arr[i] > arr[j])\r\n\t\t\t\t\tswap(arr, i, j);\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nfunction mergeSort(arr,s,e)\r\n{\r\n\tif (s === e)\r\n\t\t\treturn;\r\n\r\n\t\tlet mid = Math.floor((s + e) / 2);\r\n\r\n\t\tmergeSort(arr, s, mid);\r\n\t\tmergeSort(arr, mid + 1, e);\r\n\t\tinPlaceMerge(arr, s, e);\r\n}\r\n\r\n\r\nfunction MergeSort(arr) {\r\n\r\n  mergeSort(arr, 0, arr.length);\r\n  return animation;\r\n}\r\n\r\nexport default MergeSort;\r\n","import React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\nimport MergeSort from \"./Sorting-algorithms/MergeSort\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: [],\n      noofbars: 85,\n      speed: 85,\n    };\n  }\n\n  // Generating random number\n  genreateRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Generating random array\n  getrandomArray(colcheck) {\n    if (!colcheck) {\n      let bararr = document.getElementsByClassName(\"bars\"); // To change the color of the array\n      for (let i = 0; i < bararr.length; i++)\n        bararr[i].style.backgroundColor = \"cyan\";\n    }\n    \n    const myarr = [];\n    for (let i = 0; i < this.state.noofbars; i++)\n      myarr.push(this.genreateRandomNumber(10, 400));\n    this.setState({ arr: myarr });\n  }\n\n  toggleSliderBars() {\n    let elm = document.getElementById(\"slider-bar\");\n    this.setState({ noofbars: parseInt(elm.value) });\n    this.getrandomArray();\n  }\n\n  // When the page renders first time\n  componentDidMount() {\n    this.getrandomArray(1);\n  }\n\n  // Checking if the initial array is sorted or not\n  checkSorted(arr, sortedarr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] !== sortedarr[i]) return false;\n    }\n    return true;\n  }\n\n  // Animating the algorithms\n  animateSort(animation) {\n    let arr = this.state.arr;\n    let sortedarr = this.state.arr.slice(); //getting new copy of the arr\n    sortedarr.sort((a, b) => {\n      return a - b;\n    });\n\n    if (this.checkSorted(arr, sortedarr)) return;\n\n    // Disabling the sidebar and buttons\n    let elm = document.getElementsByClassName(\"btn\");\n    for (let i = 0; i < elm.length; i++) {\n      elm[i].disabled = true;\n    }\n    elm = document.getElementById(\"slider-bar\");\n    elm.disabled = true;\n\n    let bararr = document.getElementsByClassName(\"bars\"); // To change the color of the array\n    // console.log(sortedarr);\n\n    let a, b, h1, h2;\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1];\n      // Getting there height\n      h1 = arr[a];\n      h2 = arr[b];\n      let color = \"white\";\n\n      if (h1 > h2 && a < b) color = \"#ff4365\";\n      setTimeout(() => {\n        // Getting the index to be swapped\n        let a = animation[i][0];\n        let b = animation[i][1];\n        // Getting there height\n        let h1 = arr[a];\n        let h2 = arr[b];\n\n        // Set the height and color of the bars currently being compared\n        bararr[b].style.backgroundColor = color;\n        bararr[a].style.backgroundColor = color;\n        bararr[b].style.height = `${h1}px`;\n        bararr[a].style.height = `${h2}px`;\n\n        // For pivot element\n        if (animation[i].length === 3)\n          bararr[animation[i][2]].style.backgroundColor = \"orange\";\n\n        // Swap the elements\n        [arr[a], arr[b]] = [arr[b], arr[a]];\n\n        // Change the color of previously selected values back\n        if (i !== 0) {\n          a = animation[i - 1][0];\n          b = animation[i - 1][1];\n          bararr[b].style.background = \"cyan\";\n          bararr[a].style.background = \"cyan\";\n        }\n\n        // If this array is sorted change their color\n        if (this.checkSorted(arr, sortedarr)) {\n          // Enabling the buttons and sidebar\n          let elm = document.getElementsByClassName(\"btn\");\n          for (let j = 0; j < elm.length; j++) {\n            elm[j].disabled = false;\n          }\n          elm = document.getElementById(\"slider-bar\");\n          elm.disabled = false;\n          for (let j = 0; j < arr.length; j++)\n            bararr[j].style.backgroundColor = \"white\";\n          for (let j = 0; j < arr.length; j++) {\n            setTimeout(() => {\n              bararr[j].style.backgroundColor = \"#53fc11\";\n            }, j * 10); // For changing the color after array is sorted\n          }\n        }\n      }, i * this.state.speed);\n    }\n  }\n\n  // Algorithms being called\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n    const animation = BubbleSort(arr);\n    this.animateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.animateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.animateSort(animation);\n  }\n\n  mergeSort() {\n    let arr = this.state.arr.slice();\n    const animation = MergeSort(arr);\n    this.animateSort(animation);\n  }\n\n  //All the components that are being rendered\n  render() {\n    // Setting the Bar component setting their height\n    const barsheight = this.state.arr.map((val, inx) => {\n      return <Bars height={val} col={this.state.color} key={inx} my=\"bars\" />;\n    });\n\n    return (\n      <div>\n        <div className=\"bars-container\">{barsheight}</div>\n        {/* Button Area */}\n        <div className=\"buttons-container\">\n          <button\n            onClick={() => {\n              this.getrandomArray(0);\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Generate Array\n          </button>\n          <button\n            onClick={() => {\n              this.insertionSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Insertion Sort\n          </button>\n          <button\n            onClick={() => {\n              this.bubbleSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Bubble Sort\n          </button>\n          <button\n            onClick={() => {\n              this.quickSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Quick Sort\n          </button>\n          <button\n            onClick={() => {\n              this.mergeSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Merge Sort\n          </button>\n          <div className=\"slider\">\n            <input\n              type=\"range\"\n              value={String(this.state.noofbars)}\n              min=\"50\"\n              max=\"100\"\n              id=\"slider-bar\"\n              onInput={() => {\n                this.toggleSliderBars();\n              }}\n            ></input>\n          </div>\n        </div>\n\n        {/* Heading */}\n        <div>\n          <h1>|〡Sorting Visualizer〡|</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nfunction Main() {\r\n  return <App />;\r\n}\r\n\r\n  reactDom.render(<Main />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}