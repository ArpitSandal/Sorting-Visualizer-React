{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\sorting-visualizer\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\nimport MergeSort from \"./Sorting-algorithms/MergeSort\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar speed = 100; // function toggleSlider(){\n//   let elm=document.getElementById(\"slider\");\n//    noofbars=parseInt(elm.value);\n//   console.log(speed);\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: [],\n      noofbars: 85\n    };\n  } // Generating random number\n\n\n  genreateRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  } // Generating random array\n\n\n  getrandomArray() {\n    const myarr = [];\n\n    for (let i = 0; i < this.state.noofbars; i++) myarr.push(this.genreateRandomNumber(10, 400));\n\n    this.setState({\n      arr: myarr\n    });\n  }\n\n  toggleSlider() {\n    let elm = document.getElementById(\"slider\"); //  this.noofbars=parseInt(elm.value);\n\n    this.setState({\n      noofbars: parseInt(elm.value)\n    });\n    console.log(speed);\n  } // When the page renders first time\n\n\n  componentDidMount() {\n    this.getrandomArray();\n  } // Checking if the initial array is sorted or not\n\n\n  checkSorted(arr, sortedarr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] !== sortedarr[i]) return false;\n    }\n\n    return true;\n  } // Animating the algorithms\n\n\n  animateSort(animation) {\n    let arr = this.state.arr;\n    let sortedarr = this.state.arr.slice(); //getting new copy of the arr\n\n    let elm = document.getElementsByClassName(\"btn\");\n\n    for (let i = 0; i < elm.length; i++) {\n      elm[i].disabled = true;\n    }\n\n    sortedarr.sort((a, b) => {\n      return a - b;\n    }); // console.log(sortedarr);\n\n    let a, b, h1, h2;\n    let bararr = document.getElementsByClassName(\"bars\"); // To change the color of the array\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1]; // Getting there height\n\n      h1 = arr[a];\n      h2 = arr[b];\n      let color = \"white\";\n      if (h1 > h2 && a < b) color = \"#ff4365\";\n      setTimeout(() => {\n        // Getting the index to be swapped\n        let a = animation[i][0];\n        let b = animation[i][1]; // Getting there height\n\n        let h1 = arr[a];\n        let h2 = arr[b]; // Set the height and color of the bars currently being compared\n\n        bararr[b].style.backgroundColor = color;\n        bararr[a].style.backgroundColor = color;\n        bararr[b].style.height = `${h1}px`;\n        bararr[a].style.height = `${h2}px`; // For pivot element\n\n        if (animation[i].length === 3) bararr[animation[i][2]].style.backgroundColor = \"orange\"; // Swap the elements\n\n        [arr[a], arr[b]] = [arr[b], arr[a]]; // Change the color of previously selected values back\n\n        if (i !== 0) {\n          a = animation[i - 1][0];\n          b = animation[i - 1][1];\n          bararr[b].style.background = \"cyan\";\n          bararr[a].style.background = \"cyan\";\n        } // If this array is sorted change their color\n\n\n        if (this.checkSorted(arr, sortedarr)) {\n          let elm = document.getElementsByClassName(\"btn\");\n\n          for (let j = 0; j < elm.length; j++) {\n            elm[j].disabled = false;\n          }\n\n          for (let j = 0; j < arr.length; j++) bararr[j].style.backgroundColor = \"white\";\n\n          for (let j = 0; j < arr.length; j++) {\n            setTimeout(() => {\n              bararr[j].style.backgroundColor = \"#53fc11\";\n            }, j * 10); // For changing the color after array is sorted\n          }\n        }\n      }, i * speed);\n    }\n  } // Algorithms being called\n\n\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n\n    const animation = BubbleSort(arr);\n    this.animateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.animateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.animateSort(animation);\n  }\n\n  mergeSort() {\n    let arr = this.state.arr.slice();\n    const animation = MergeSort(arr);\n    this.animateSort(animation);\n  } //All the components that are being rendered\n\n\n  render() {\n    // Setting the Bar component setting their height\n    const barsheight = this.state.arr.map((val, inx) => {\n      return /*#__PURE__*/_jsxDEV(Bars, {\n        height: val,\n        my: \"bars\"\n      }, inx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bars-container\",\n        children: barsheight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.getrandomArray();\n          },\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: \"Generate Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.insertionSort();\n          },\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: \"Insertion Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.bubbleSort();\n          },\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.quickSort();\n          },\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.mergeSort();\n          },\n          type: \"button\",\n          className: \"btn btn-light\",\n          children: \"Merge Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"50\",\n            max: \"100\",\n            id: \"slider\",\n            onInput: () => {\n              this.toggleSlider();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"|\\u3021Sorting Visualizer\\u3021|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/projects/sorting-visualizer/src/App.js"],"names":["React","Component","Bars","BubbleSort","InsertionSort","QuickSort","MergeSort","speed","App","constructor","state","arr","noofbars","genreateRandomNumber","min","max","Math","floor","random","getrandomArray","myarr","i","push","setState","toggleSlider","elm","document","getElementById","parseInt","value","console","log","componentDidMount","checkSorted","sortedarr","length","animateSort","animation","slice","getElementsByClassName","disabled","sort","a","b","h1","h2","bararr","color","setTimeout","style","backgroundColor","height","background","j","bubbleSort","insertionSort","quickSort","mergeSort","render","barsheight","map","val","inx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\nimport MergeSort from \"./Sorting-algorithms/MergeSort\";\n\nvar speed = 100;\n// function toggleSlider(){\n//   let elm=document.getElementById(\"slider\");\n//    noofbars=parseInt(elm.value);\n//   console.log(speed);\n// }\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: [],\n      noofbars: 85,\n    };\n  }\n\n  // Generating random number\n  genreateRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Generating random array\n  getrandomArray() {\n    const myarr = [];\n    for (let i = 0; i < this.state.noofbars; i++) myarr.push(this.genreateRandomNumber(10, 400));\n    this.setState({ arr: myarr });\n  }\n  toggleSlider(){\n  let elm=document.getElementById(\"slider\");\n  //  this.noofbars=parseInt(elm.value);\n   this.setState({noofbars: parseInt(elm.value)});\n  console.log(speed);\n}\n\n  // When the page renders first time\n  componentDidMount() {\n    this.getrandomArray();\n  }\n\n  // Checking if the initial array is sorted or not\n  checkSorted(arr, sortedarr) {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] !== sortedarr[i]) return false;\n    }\n    return true;\n  }\n\n  // Animating the algorithms\n  animateSort(animation) {\n    let arr = this.state.arr;\n    let sortedarr = this.state.arr.slice(); //getting new copy of the arr\n    let elm=document.getElementsByClassName(\"btn\");\n    for(let i=0; i<elm.length; i++){\n      elm[i].disabled=true;\n    }\n    sortedarr.sort((a, b) => {\n      return a - b;\n    });\n    // console.log(sortedarr);\n\n    let a, b, h1, h2;\n    let bararr = document.getElementsByClassName(\"bars\"); // To change the color of the array\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1];\n      // Getting there height\n      h1 = arr[a];\n      h2 = arr[b];\n      let color = \"white\";\n\n      if (h1 > h2 && a < b) color = \"#ff4365\";\n      setTimeout(() => {\n        // Getting the index to be swapped\n        let a = animation[i][0];\n        let b = animation[i][1];\n        // Getting there height\n        let h1 = arr[a];\n        let h2 = arr[b];\n\n        // Set the height and color of the bars currently being compared\n        bararr[b].style.backgroundColor = color;\n        bararr[a].style.backgroundColor = color;\n        bararr[b].style.height = `${h1}px`;\n        bararr[a].style.height = `${h2}px`;\n\n        // For pivot element\n        if (animation[i].length === 3)\n          bararr[animation[i][2]].style.backgroundColor = \"orange\";\n\n        // Swap the elements\n        [arr[a], arr[b]] = [arr[b], arr[a]];\n\n        // Change the color of previously selected values back\n        if (i !== 0) {\n          a = animation[i - 1][0];\n          b = animation[i - 1][1];\n          bararr[b].style.background = \"cyan\";\n          bararr[a].style.background = \"cyan\";\n        }\n\n        // If this array is sorted change their color\n        if (this.checkSorted(arr, sortedarr)) {\n          let elm=document.getElementsByClassName(\"btn\");\n          for(let j=0; j<elm.length; j++){\n            elm[j].disabled=false;\n          }\n          for (let j = 0; j < arr.length; j++)\n            bararr[j].style.backgroundColor = \"white\";\n          for (let j = 0; j < arr.length; j++) {\n            setTimeout(() => {\n              bararr[j].style.backgroundColor = \"#53fc11\";\n            }, j * 10); // For changing the color after array is sorted\n          }\n        }\n      }, i *speed );\n    }\n  }\n\n  // Algorithms being called\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n    const animation = BubbleSort(arr);\n    this.animateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.animateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.animateSort(animation);\n  }\n\n  mergeSort() {\n    let arr = this.state.arr.slice();\n    const animation = MergeSort(arr);\n    this.animateSort(animation);\n  }\n\n  //All the components that are being rendered\n  render() {\n    // Setting the Bar component setting their height\n    const barsheight = this.state.arr.map((val, inx) => {\n      return <Bars height={val} key={inx} my=\"bars\" />;\n    });\n\n    return (\n      <div>\n        <div className=\"bars-container\">{barsheight}</div>\n        <div className=\"buttons-container\">\n        <button\n            onClick={() => {\n              this.getrandomArray();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Generate Array\n          </button>\n          <button\n            onClick={() => {\n              this.insertionSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Insertion Sort\n          </button>\n          <button\n            onClick={() => {\n              this.bubbleSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Bubble Sort\n          </button>\n          <button\n            onClick={() => {\n              this.quickSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Quick Sort\n          </button>\n          <button\n            onClick={() => {\n              this.mergeSort();\n            }}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Merge Sort\n          </button>\n          <div>\n          <input type=\"range\" min=\"50\" max=\"100\" id=\"slider\" onInput={()=>{this.toggleSlider()}} ></input>\n        </div>\n        </div>\n        <div>\n          <h1>|〡Sorting Visualizer〡|</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}