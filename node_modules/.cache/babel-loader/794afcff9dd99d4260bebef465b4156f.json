{"ast":null,"code":"var animation=[];function nextGap(gap){if(gap<=1)return 0;return Math.floor(Math.ceil(gap/2.0));}// Function for swapping\nfunction swap(arr,i,j){animation.push([i,j]);var temp=arr[i];arr[i]=arr[j];arr[j]=temp;}function inPlaceMerge(arr,start,end){var gap=end-start+1;for(gap=nextGap(gap);gap>0;gap=nextGap(gap)){for(var i=start;i+gap<=end;i++){var j=i+gap;if(arr[i]>arr[j])swap(arr,i,j);}}}function mergeSort(arr,s,e){if(s===e)return;var mid=Math.floor((s+e)/2);mergeSort(arr,s,mid);mergeSort(arr,mid+1,e);inPlaceMerge(arr,s,e);}function MergeSort(arr){mergeSort(arr,0,arr.length);return animation;}export default MergeSort;","map":{"version":3,"sources":["D:/projects/sorting-visualizer/src/Sorting-algorithms/MergeSort.js"],"names":["animation","nextGap","gap","Math","floor","ceil","swap","arr","i","j","push","temp","inPlaceMerge","start","end","mergeSort","s","e","mid","MergeSort","length"],"mappings":"AAAA,GAAIA,CAAAA,SAAS,CAAG,EAAhB,CAEA,QAASC,CAAAA,OAAT,CAAiBC,GAAjB,CACA,CACC,GAAIA,GAAG,EAAI,CAAX,CACE,MAAO,EAAP,CACD,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,IAAL,CAAUH,GAAG,CAAG,GAAhB,CAAX,CAAP,CACD,CAED;AACA,QAASI,CAAAA,IAAT,CAAcC,GAAd,CAAkBC,CAAlB,CAAoBC,CAApB,CACA,CACIT,SAAS,CAACU,IAAV,CAAe,CAACF,CAAD,CAAGC,CAAH,CAAf,EACH,GAAIE,CAAAA,IAAI,CAAGJ,GAAG,CAACC,CAAD,CAAd,CACCD,GAAG,CAACC,CAAD,CAAH,CAASD,GAAG,CAACE,CAAD,CAAZ,CACAF,GAAG,CAACE,CAAD,CAAH,CAASE,IAAT,CACD,CAED,QAASC,CAAAA,YAAT,CAAsBL,GAAtB,CAA0BM,KAA1B,CAAgCC,GAAhC,CACA,CACC,GAAIZ,CAAAA,GAAG,CAAGY,GAAG,CAAGD,KAAN,CAAc,CAAxB,CACC,IAAKX,GAAG,CAAGD,OAAO,CAACC,GAAD,CAAlB,CAAyBA,GAAG,CAAG,CAA/B,CACCA,GAAG,CAAGD,OAAO,CAACC,GAAD,CADd,CACqB,CACpB,IAAK,GAAIM,CAAAA,CAAC,CAAGK,KAAb,CAAoBL,CAAC,CAAGN,GAAJ,EAAWY,GAA/B,CAAoCN,CAAC,EAArC,CAAyC,CACxC,GAAIC,CAAAA,CAAC,CAAGD,CAAC,CAAGN,GAAZ,CACA,GAAIK,GAAG,CAACC,CAAD,CAAH,CAASD,GAAG,CAACE,CAAD,CAAhB,CACCH,IAAI,CAACC,GAAD,CAAMC,CAAN,CAASC,CAAT,CAAJ,CACD,CACD,CACF,CAED,QAASM,CAAAA,SAAT,CAAmBR,GAAnB,CAAuBS,CAAvB,CAAyBC,CAAzB,CACA,CACC,GAAID,CAAC,GAAKC,CAAV,CACE,OAED,GAAIC,CAAAA,GAAG,CAAGf,IAAI,CAACC,KAAL,CAAW,CAACY,CAAC,CAAGC,CAAL,EAAU,CAArB,CAAV,CAEAF,SAAS,CAACR,GAAD,CAAMS,CAAN,CAASE,GAAT,CAAT,CACAH,SAAS,CAACR,GAAD,CAAMW,GAAG,CAAG,CAAZ,CAAeD,CAAf,CAAT,CACAL,YAAY,CAACL,GAAD,CAAMS,CAAN,CAASC,CAAT,CAAZ,CACD,CAGD,QAASE,CAAAA,SAAT,CAAmBZ,GAAnB,CAAwB,CAEtBQ,SAAS,CAACR,GAAD,CAAM,CAAN,CAASA,GAAG,CAACa,MAAb,CAAT,CACA,MAAOpB,CAAAA,SAAP,CACD,CAED,cAAemB,CAAAA,SAAf","sourcesContent":["let animation = [];\r\n\r\nfunction nextGap(gap)\r\n{\r\n\tif (gap <= 1)\r\n\t\t\treturn 0;\r\n\t\treturn Math.floor(Math.ceil(gap / 2.0));\r\n}\r\n\r\n// Function for swapping\r\nfunction swap(arr,i,j)\r\n{\r\n    animation.push([i,j]);\r\n\tlet temp = arr[i];\r\n\t\tarr[i] = arr[j];\r\n\t\tarr[j] = temp;\r\n}\r\n\r\nfunction inPlaceMerge(arr,start,end)\r\n{\r\n\tlet gap = end - start + 1;\r\n\t\tfor (gap = nextGap(gap); gap > 0;\r\n\t\t\tgap = nextGap(gap)) {\r\n\t\t\tfor (let i = start; i + gap <= end; i++) {\r\n\t\t\t\tlet j = i + gap;\r\n\t\t\t\tif (arr[i] > arr[j])\r\n\t\t\t\t\tswap(arr, i, j);\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nfunction mergeSort(arr,s,e)\r\n{\r\n\tif (s === e)\r\n\t\t\treturn;\r\n\r\n\t\tlet mid = Math.floor((s + e) / 2);\r\n\r\n\t\tmergeSort(arr, s, mid);\r\n\t\tmergeSort(arr, mid + 1, e);\r\n\t\tinPlaceMerge(arr, s, e);\r\n}\r\n\r\n\r\nfunction MergeSort(arr) {\r\n\r\n  mergeSort(arr, 0, arr.length);\r\n  return animation;\r\n}\r\n\r\nexport default MergeSort;\r\n"]},"metadata":{},"sourceType":"module"}