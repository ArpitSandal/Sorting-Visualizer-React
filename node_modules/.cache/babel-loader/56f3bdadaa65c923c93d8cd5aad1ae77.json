{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\sorting-visualizer\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ch = 1;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: []\n    };\n  } // Generating random number\n\n\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  } // Generating random array\n\n\n  getrandomarray() {\n    const myarr = [];\n\n    for (let i = 0; i < 100; i++) myarr.push(this.genreateRandom(10, 300));\n\n    this.setState({\n      arr: myarr\n    });\n  }\n\n  componentDidMount() {\n    this.getrandomarray();\n  }\n\n  checkthis(arr, checker) {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] != checker[i]) return i - 1;\n    }\n\n    return -1;\n  }\n\n  // Animating the algorithms\n  AnimateSort(animation) {\n    let arr = this.state.arr;\n    let checker = this.state.arr.slice();\n    checker.sort((a, b) => {\n      return a - b;\n    }); // console.log(checker);\n\n    let a, b, h1, h2;\n    let bararr = document.getElementsByClassName(\"bars\");\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1];\n      setTimeout(() => {\n        a = animation[i][0];\n        b = animation[i][1];\n        h1 = arr[a];\n        h2 = arr[b];\n\n        for (let j = 0; j <= this.checkthis(arr, checker); j++) {\n          // console.log(bararr[j].style.backgroundColor);\n          bararr[j].style.backgroundColor = \"cyan\";\n        }\n\n        for (let j = this.checkrev(arr, checker); j >= 0; j++) {\n          // console.log(bararr[j].style.backgroundColor);\n          bararr[j].style.backgroundColor = \"cyan\";\n        } // this.setState({ ...arr});\n        // console.log(a,b);\n        // console.log(bararr[a].style.backgroundColor);\n\n\n        bararr[b].style.height = `${h1}px`;\n        bararr[a].style.height = `${h2}px`;\n        bararr[b].style.backgroundColor = \"blue\";\n        bararr[a].style.backgroundColor = \"blue\";\n        if (animation[i].length == 3) bararr[animation[i][2]].style.backgroundColor = \"green\";\n        [arr[a], arr[b]] = [arr[b], arr[a]];\n\n        if (i != 0) {\n          a = animation[i - 1][0];\n          b = animation[i - 1][1];\n          bararr[b].style.backgroundColor = \"red\";\n          bararr[a].style.backgroundColor = \"red\";\n        } // console.log(h2);\n\n      }, i * 10);\n    } // console.log(document.getElementsByClassName(\"bars\"));\n\n  } // Calling The algorithms\n\n\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n\n    const animation = BubbleSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.AnimateSort(animation);\n  } //All the components that are being rendered\n\n\n  render() {\n    const barsheight = this.state.arr.map((val, inx) => {\n      return /*#__PURE__*/_jsxDEV(Bars, {\n        height: val,\n        class: \"bars\"\n      }, inx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bars-container\",\n        children: barsheight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.bubbleSort();\n        },\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.insertionSort();\n        },\n        children: \"Insertion Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.quickSort();\n        },\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/projects/sorting-visualizer/src/App.js"],"names":["React","Component","Bars","BubbleSort","InsertionSort","QuickSort","ch","App","constructor","state","arr","genreateRandom","min","max","Math","floor","random","getrandomarray","myarr","i","push","setState","componentDidMount","checkthis","checker","length","AnimateSort","animation","slice","sort","a","b","h1","h2","bararr","document","getElementsByClassName","setTimeout","j","style","backgroundColor","checkrev","height","bubbleSort","insertionSort","quickSort","render","barsheight","map","val","inx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AAEA,IAAIC,EAAE,GAAC,CAAP;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGD,GANyB,CAQ1B;;;AACAC,EAAAA,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAW;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD,GAXyB,CAa1B;;;AACAK,EAAAA,cAAc,GAAG;AACf,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8BD,KAAK,CAACE,IAAN,CAAW,KAAKT,cAAL,CAAoB,EAApB,EAAwB,GAAxB,CAAX;;AAC9B,SAAKU,QAAL,CAAc;AAAEX,MAAAA,GAAG,EAAEQ;AAAP,KAAd;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,cAAL;AACD;;AAEDM,EAAAA,SAAS,CAACb,GAAD,EAAMc,OAAN,EAAc;AACrB,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACT,GAAG,CAACe,MAAnB,EAA2BN,CAAC,EAA5B,EAA+B;AAC7B,UAAGT,GAAG,CAACS,CAAD,CAAH,IAAQK,OAAO,CAACL,CAAD,CAAlB,EACE,OAAOA,CAAC,GAAC,CAAT;AACH;;AACD,WAAO,CAAC,CAAR;AACD;;AAGD;AACAO,EAAAA,WAAW,CAACC,SAAD,EAAY;AACrB,QAAIjB,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAArB;AACA,QAAIc,OAAO,GAAG,KAAKf,KAAL,CAAWC,GAAX,CAAekB,KAAf,EAAd;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,aAAOD,CAAC,GAAGC,CAAX;AACD,KAFD,EAHqB,CAMrB;;AAEA,QAAID,CAAJ,EAAOC,CAAP,EAASC,EAAT,EAAYC,EAAZ;AACA,QAAIC,MAAM,GAACC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,CAAX;;AAEA,SAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,SAAS,CAACF,MAA9B,EAAsCN,CAAC,EAAvC,EAA2C;AACzCW,MAAAA,CAAC,GAAGH,SAAS,CAACR,CAAD,CAAT,CAAa,CAAb,CAAJ;AACAY,MAAAA,CAAC,GAAGJ,SAAS,CAACR,CAAD,CAAT,CAAa,CAAb,CAAJ;AACAkB,MAAAA,UAAU,CAAC,MAAM;AACfP,QAAAA,CAAC,GAAGH,SAAS,CAACR,CAAD,CAAT,CAAa,CAAb,CAAJ;AACAY,QAAAA,CAAC,GAAGJ,SAAS,CAACR,CAAD,CAAT,CAAa,CAAb,CAAJ;AACAa,QAAAA,EAAE,GAAGtB,GAAG,CAACoB,CAAD,CAAR;AACAG,QAAAA,EAAE,GAAGvB,GAAG,CAACqB,CAAD,CAAR;;AACA,aAAI,IAAIO,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAE,KAAKf,SAAL,CAAeb,GAAf,EAAmBc,OAAnB,CAAhB,EAA6Cc,CAAC,EAA9C,EAAiD;AAC/C;AACAJ,UAAAA,MAAM,CAACI,CAAD,CAAN,CAAUC,KAAV,CAAgBC,eAAhB,GAAgC,MAAhC;AACD;;AACD,aAAI,IAAIF,CAAC,GAAC,KAAKG,QAAL,CAAc/B,GAAd,EAAkBc,OAAlB,CAAV,EAAsCc,CAAC,IAAE,CAAzC,EAA4CA,CAAC,EAA7C,EAAgD;AAC9C;AACAJ,UAAAA,MAAM,CAACI,CAAD,CAAN,CAAUC,KAAV,CAAgBC,eAAhB,GAAgC,MAAhC;AACD,SAZc,CAcf;AACA;AACA;;;AACAN,QAAAA,MAAM,CAACH,CAAD,CAAN,CAAUQ,KAAV,CAAgBG,MAAhB,GAAwB,GAAEV,EAAG,IAA7B;AACAE,QAAAA,MAAM,CAACJ,CAAD,CAAN,CAAUS,KAAV,CAAgBG,MAAhB,GAAwB,GAAET,EAAG,IAA7B;AACAC,QAAAA,MAAM,CAACH,CAAD,CAAN,CAAUQ,KAAV,CAAgBC,eAAhB,GAAgC,MAAhC;AACAN,QAAAA,MAAM,CAACJ,CAAD,CAAN,CAAUS,KAAV,CAAgBC,eAAhB,GAAgC,MAAhC;AACA,YAAGb,SAAS,CAACR,CAAD,CAAT,CAAaM,MAAb,IAAqB,CAAxB,EACAS,MAAM,CAACP,SAAS,CAACR,CAAD,CAAT,CAAa,CAAb,CAAD,CAAN,CAAwBoB,KAAxB,CAA8BC,eAA9B,GAA8C,OAA9C;AACA,SAAC9B,GAAG,CAACoB,CAAD,CAAJ,EAASpB,GAAG,CAACqB,CAAD,CAAZ,IAAmB,CAACrB,GAAG,CAACqB,CAAD,CAAJ,EAASrB,GAAG,CAACoB,CAAD,CAAZ,CAAnB;;AACA,YAAGX,CAAC,IAAE,CAAN,EAAQ;AACNW,UAAAA,CAAC,GAAGH,SAAS,CAACR,CAAC,GAAC,CAAH,CAAT,CAAe,CAAf,CAAJ;AACFY,UAAAA,CAAC,GAAGJ,SAAS,CAACR,CAAC,GAAC,CAAH,CAAT,CAAe,CAAf,CAAJ;AACAe,UAAAA,MAAM,CAACH,CAAD,CAAN,CAAUQ,KAAV,CAAgBC,eAAhB,GAAgC,KAAhC;AACAN,UAAAA,MAAM,CAACJ,CAAD,CAAN,CAAUS,KAAV,CAAgBC,eAAhB,GAAgC,KAAhC;AACC,SA7Bc,CA+Bf;;AACD,OAhCS,EAgCNrB,CAAD,GAAM,EAhCC,CAAV;AAiCD,KA/CoB,CAkDrB;;AACD,GArFyB,CAuF1B;;;AACAwB,EAAAA,UAAU,GAAG;AACX,QAAIjC,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAX,CAAekB,KAAf,EAAV,CADW,CACuB;;AAClC,UAAMD,SAAS,GAAGxB,UAAU,CAACO,GAAD,CAA5B;AACA,SAAKgB,WAAL,CAAiBC,SAAjB;AACD;;AAEDiB,EAAAA,aAAa,GAAG;AACd,QAAIlC,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAX,CAAekB,KAAf,EAAV;AACA,UAAMD,SAAS,GAAGvB,aAAa,CAACM,GAAD,CAA/B;AACA,SAAKgB,WAAL,CAAiBC,SAAjB;AACD;;AAEDkB,EAAAA,SAAS,GAAG;AACV,QAAInC,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAX,CAAekB,KAAf,EAAV;AACA,UAAMD,SAAS,GAAGtB,SAAS,CAACK,GAAD,CAA3B;AACA,SAAKgB,WAAL,CAAiBC,SAAjB;AACD,GAxGyB,CA0G1B;;;AACAmB,EAAAA,MAAM,GAAG;AAEP,UAAMC,UAAU,GAAG,KAAKtC,KAAL,CAAWC,GAAX,CAAesC,GAAf,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,0BAAO,QAAC,IAAD;AAAM,QAAA,MAAM,EAAED,GAAd;AAA6B,QAAA,KAAK,EAAC;AAAnC,SAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFkB,CAAnB;AAIA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiCH;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKJ,UAAL;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKC,aAAL;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKC,SAAL;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AA3IyB;;AA8I5B,eAAetC,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\n\nlet ch=1;\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: [],\n    };\n  }\n\n  // Generating random number\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Generating random array\n  getrandomarray() {\n    const myarr = [];\n    for (let i = 0; i < 100; i++) myarr.push(this.genreateRandom(10, 300));\n    this.setState({ arr: myarr });\n  }\n\n  componentDidMount() {\n    this.getrandomarray();\n  }\n\n  checkthis(arr, checker){\n    for(let i=0; i<arr.length; i++){\n      if(arr[i]!=checker[i])\n        return i-1;\n    }\n    return -1;\n  }\n  che\n\n  // Animating the algorithms\n  AnimateSort(animation) {\n    let arr = this.state.arr;\n    let checker = this.state.arr.slice();\n    checker.sort((a, b) => {\n      return a - b;\n    });\n    // console.log(checker);\n\n    let a, b,h1,h2;\n    let bararr=document.getElementsByClassName(\"bars\");\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1];\n      setTimeout(() => {\n        a = animation[i][0];\n        b = animation[i][1];\n        h1 = arr[a];\n        h2 = arr[b];\n        for(let j=0; j<=this.checkthis(arr,checker); j++){\n          // console.log(bararr[j].style.backgroundColor);\n          bararr[j].style.backgroundColor=\"cyan\";\n        }\n        for(let j=this.checkrev(arr,checker); j>=0; j++){\n          // console.log(bararr[j].style.backgroundColor);\n          bararr[j].style.backgroundColor=\"cyan\";\n        }\n        \n        // this.setState({ ...arr});\n        // console.log(a,b);\n        // console.log(bararr[a].style.backgroundColor);\n        bararr[b].style.height=`${h1}px`;\n        bararr[a].style.height=`${h2}px`;\n        bararr[b].style.backgroundColor=\"blue\";\n        bararr[a].style.backgroundColor=\"blue\";\n        if(animation[i].length==3)\n        bararr[animation[i][2]].style.backgroundColor=\"green\";\n        [arr[a], arr[b]] = [arr[b], arr[a]];\n        if(i!=0){\n          a = animation[i-1][0];\n        b = animation[i-1][1];\n        bararr[b].style.backgroundColor=\"red\";\n        bararr[a].style.backgroundColor=\"red\";\n        }\n\n        // console.log(h2);\n      }, (i) * 10);\n    }\n    \n  \n    // console.log(document.getElementsByClassName(\"bars\"));\n  }\n\n  // Calling The algorithms\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n    const animation = BubbleSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  //All the components that are being rendered\n  render() {\n\n    const barsheight = this.state.arr.map((val, inx) => {\n      return <Bars height={val} key={inx} class=\"bars\"/>;\n    });\n\n    return (\n      <div>\n        <div className=\"bars-container\">{barsheight}</div>\n        <button\n          onClick={() => {\n            this.bubbleSort();\n          }}\n        >\n          Bubble Sort\n        </button>\n        <button\n          onClick={() => {\n            this.insertionSort();\n          }}\n        >\n          Insertion Sort\n        </button>\n        <button\n          onClick={() => {\n            this.quickSort();\n          }}\n        >\n          Quick Sort\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}