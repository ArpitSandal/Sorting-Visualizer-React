{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\sorting-visualizer\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      intitialarr: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.temp = this.temp.bind(this); // console.log(\"const\")\n  }\n\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  getrandomarray() {\n    const arr = [];\n\n    for (let i = 0; i < 10; i++) arr.push(this.genreateRandom(1, 11));\n\n    return arr;\n  }\n\n  componentDidMount() {\n    const newrandomarray = this.getrandomarray();\n    this.setState(prevstate => {\n      return {\n        intitialarr: newrandomarray\n      };\n    });\n  }\n\n  temp() {\n    // if (this.intitialarr.length() === 0) return;\n    const newrandomarray = this.state.intitialarr;\n    [newrandomarray[0], newrandomarray[9]] = [newrandomarray[9], newrandomarray[0]];\n    this.setState(prevstate => {\n      return {\n        intitialarr: newrandomarray\n      };\n    }); // console.log(this.state.intitialarr)\n  }\n\n  render() {\n    const barsheight = this.state.intitialarr.map(val => {\n      return /*#__PURE__*/_jsxDEV(Bars, {\n        bar: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [barsheight, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.temp,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/sorting-visualizer/src/App.js"],"names":["React","Component","Bars","App","constructor","state","intitialarr","componentDidMount","bind","temp","genreateRandom","min","max","Math","floor","random","getrandomarray","arr","i","push","newrandomarray","setState","prevstate","render","barsheight","map","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ,CANY,CAOZ;AACD;;AACDE,EAAAA,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAW;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD;;AAEDK,EAAAA,cAAc,GAAG;AACf,UAAMC,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6BD,GAAG,CAACE,IAAJ,CAAS,KAAKT,cAAL,CAAoB,CAApB,EAAuB,EAAvB,CAAT;;AAC7B,WAAOO,GAAP;AACD;;AAEDV,EAAAA,iBAAiB,GAAG;AAClB,UAAMa,cAAc,GAAG,KAAKJ,cAAL,EAAvB;AACA,SAAKK,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEhB,QAAAA,WAAW,EAAEc;AAAf,OAAP;AACD,KAFD;AAGD;;AAEDX,EAAAA,IAAI,GAAG;AACL;AACA,UAAMW,cAAc,GAAG,KAAKf,KAAL,CAAWC,WAAlC;AACE,KAACc,cAAc,CAAC,CAAD,CAAf,EAAoBA,cAAc,CAAC,CAAD,CAAlC,IAAyC,CACvCA,cAAc,CAAC,CAAD,CADyB,EAEvCA,cAAc,CAAC,CAAD,CAFyB,CAAzC;AAIA,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEhB,QAAAA,WAAW,EAAEc;AAAf,OAAP;AACD,KAFD,EAPG,CAUH;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKnB,KAAL,CAAWC,WAAX,CAAuBmB,GAAvB,CAA4BC,GAAD,IAAS;AACrD,0BAAO,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEA;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFkB,CAAnB;AAGA,wBACE;AAAA,iBACGF,UADH,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKf,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAlDyB;;AAqD5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      intitialarr: [],\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.temp = this.temp.bind(this);\n    // console.log(\"const\")\n  }\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  getrandomarray() {\n    const arr = [];\n    for (let i = 0; i < 10; i++) arr.push(this.genreateRandom(1, 11));\n    return arr;\n  }\n\n  componentDidMount() {\n    const newrandomarray = this.getrandomarray();\n    this.setState((prevstate) => {\n      return { intitialarr: newrandomarray };\n    });\n  }\n\n  temp() {\n    // if (this.intitialarr.length() === 0) return;\n    const newrandomarray = this.state.intitialarr;\n      [newrandomarray[0], newrandomarray[9]] = [\n        newrandomarray[9],\n        newrandomarray[0],\n      ];\n      this.setState((prevstate) => {\n        return { intitialarr: newrandomarray };\n      });\n      // console.log(this.state.intitialarr)\n  }\n\n  render() {\n    const barsheight = this.state.intitialarr.map((val) => {\n      return <Bars bar={val} />;\n    });\n    return (\n      <div>\n        {barsheight}\n        <button onClick={this.temp}>Button</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}