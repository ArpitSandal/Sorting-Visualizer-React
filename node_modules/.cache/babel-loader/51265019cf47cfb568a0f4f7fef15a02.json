{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\sorting-visualizer\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: []\n    };\n    this.getrandomarray = this.getrandomarray.bind(this); // console.log(\"const\")\n\n    this.temp = this.temp.bind(this);\n  }\n\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  getrandomarray() {\n    const myarr = [];\n\n    for (let i = 0; i < 10; i++) myarr.push(this.genreateRandom(1, 11));\n\n    this.setState({\n      arr: myarr\n    });\n  }\n\n  componentDidMount() {\n    this.getrandomarray();\n  }\n\n  temp() {\n    const newarr = this.state.arr;\n    [newarr[0], newarr[9]] = [newarr[9], newarr[0]];\n    this.setState({\n      arr: newarr\n    });\n  }\n\n  render() {\n    // this.temp()\n    const barsheight = this.state.arr.map(val => {\n      return /*#__PURE__*/_jsxDEV(Bars, {\n        bar: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [barsheight, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.temp(),\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/sorting-visualizer/src/App.js"],"names":["React","Component","Bars","App","constructor","state","arr","getrandomarray","bind","temp","genreateRandom","min","max","Math","floor","random","myarr","i","push","setState","componentDidMount","newarr","render","barsheight","map","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB,CALY,CAMZ;;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACD;;AACDE,EAAAA,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAW;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD;;AAEDJ,EAAAA,cAAc,GAAG;AACf,UAAMS,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6BD,KAAK,CAACE,IAAN,CAAW,KAAKR,cAAL,CAAoB,CAApB,EAAuB,EAAvB,CAAX;;AAC7B,SAAKS,QAAL,CAAc;AAACb,MAAAA,GAAG,EAAEU;AAAN,KAAd;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,cAAL;AACD;;AAEDE,EAAAA,IAAI,GAAE;AACJ,UAAMY,MAAM,GAAC,KAAKhB,KAAL,CAAWC,GAAxB;AACA,KAACe,MAAM,CAAC,CAAD,CAAP,EAAWA,MAAM,CAAC,CAAD,CAAjB,IAAsB,CAACA,MAAM,CAAC,CAAD,CAAP,EAAWA,MAAM,CAAC,CAAD,CAAjB,CAAtB;AACA,SAAKF,QAAL,CAAc;AAACb,MAAAA,GAAG,EAAEe;AAAN,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,UAAU,GAAG,KAAKlB,KAAL,CAAWC,GAAX,CAAekB,GAAf,CAAoBC,GAAD,IAAS;AAC7C,0BAAO,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEA;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFkB,CAAnB;AAIA,wBACE;AAAA,iBACGF,UADH,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKd,IAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1CyB;;AA6C5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: [],\n    };\n    this.getrandomarray = this.getrandomarray.bind(this);\n    // console.log(\"const\")\n    this.temp = this.temp.bind(this)\n  }\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  getrandomarray() {\n    const myarr = [];\n    for (let i = 0; i < 10; i++) myarr.push(this.genreateRandom(1, 11));\n    this.setState({arr: myarr})\n  }\n\n  componentDidMount() {\n    this.getrandomarray()\n  }\n\n  temp(){\n    const newarr=this.state.arr;\n    [newarr[0],newarr[9]]=[newarr[9],newarr[0]]\n    this.setState({arr: newarr})\n  }\n\n  render() {\n    // this.temp()\n    const barsheight = this.state.arr.map((val) => {\n      return <Bars bar={val} />;\n    });\n\n    return (\n      <div>\n        {barsheight}\n        <button onClick={()=>this.temp()}>Button</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}