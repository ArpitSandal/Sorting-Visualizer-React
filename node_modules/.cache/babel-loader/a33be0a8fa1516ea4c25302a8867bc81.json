{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\sorting-visualizer\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ch = 1;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: []\n    };\n  } // Generating random number\n\n\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  } // Generating random array\n\n\n  getrandomarray() {\n    const myarr = [];\n\n    for (let i = 0; i < 100; i++) myarr.push(this.genreateRandom(10, 300));\n\n    this.setState({\n      arr: myarr\n    });\n  }\n\n  componentDidMount() {\n    this.getrandomarray();\n  } // Animating the algorithms\n\n\n  AnimateSort(animation) {\n    let arr = this.state.arr;\n    let checker = this.state.arr.slice();\n    checker.sort((a, b) => {\n      return a - b;\n    }); // console.log(checker);\n\n    let a, b, h1, h2;\n    let bararr = document.getElementsByClassName(\"bars\");\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1];\n\n      for (let j = 0; j <= this.checkthis(arr, checker); j++) {\n        bararr[j].style.backgroundColor = \"green\";\n      }\n\n      setTimeout(() => {\n        a = animation[i][0];\n        b = animation[i][1];\n        h1 = arr[a];\n        h2 = arr[b]; // this.setState({ ...arr});\n        // console.log(a,b);\n        // console.log(bararr[a].style.backgroundColor);\n\n        bararr[b].style.height = `${h1}px`;\n        bararr[a].style.height = `${h2}px`;\n        bararr[b].style.backgroundColor = \"blue\";\n        bararr[a].style.backgroundColor = \"blue\";\n        if (animation[i].length == 3) bararr[animation[i][2]].style.backgroundColor = \"green\";\n        [arr[a], arr[b]] = [arr[b], arr[a]];\n\n        if (i != 0) {\n          a = animation[i - 1][0];\n          b = animation[i - 1][1];\n          bararr[b].style.backgroundColor = \"red\";\n          bararr[a].style.backgroundColor = \"red\";\n        } // console.log(h2);\n\n      }, i * 50);\n    } // console.log(document.getElementsByClassName(\"bars\"));\n\n  } // Calling The algorithms\n\n\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n\n    const animation = BubbleSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.AnimateSort(animation);\n  } //All the components that are being rendered\n\n\n  render() {\n    const barsheight = this.state.arr.map((val, inx) => {\n      return /*#__PURE__*/_jsxDEV(Bars, {\n        height: val,\n        class: \"bars\"\n      }, inx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bars-container\",\n        children: barsheight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.bubbleSort();\n        },\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.insertionSort();\n        },\n        children: \"Insertion Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.quickSort();\n        },\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/projects/sorting-visualizer/src/App.js"],"names":["React","Component","Bars","BubbleSort","InsertionSort","QuickSort","ch","App","constructor","state","arr","genreateRandom","min","max","Math","floor","random","getrandomarray","myarr","i","push","setState","componentDidMount","AnimateSort","animation","checker","slice","sort","a","b","h1","h2","bararr","document","getElementsByClassName","length","j","checkthis","style","backgroundColor","setTimeout","height","bubbleSort","insertionSort","quickSort","render","barsheight","map","val","inx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Bars from \"./components/Bars\";\nimport \"./App.css\";\nimport BubbleSort from \"./Sorting-algorithms/BubbleSort\";\nimport InsertionSort from \"./Sorting-algorithms/InsertionSort\";\nimport QuickSort from \"./Sorting-algorithms/QuickSort\";\n\nlet ch=1;\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arr: [],\n    };\n  }\n\n  // Generating random number\n  genreateRandom(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Generating random array\n  getrandomarray() {\n    const myarr = [];\n    for (let i = 0; i < 100; i++) myarr.push(this.genreateRandom(10, 300));\n    this.setState({ arr: myarr });\n  }\n\n  componentDidMount() {\n    this.getrandomarray();\n  }\n\n  \n\n  // Animating the algorithms\n  AnimateSort(animation) {\n    let arr = this.state.arr;\n    let checker = this.state.arr.slice();\n    checker.sort((a, b) => {\n      return a - b;\n    });\n    // console.log(checker);\n\n    let a, b,h1,h2;\n    let bararr=document.getElementsByClassName(\"bars\");\n\n    for (let i = 0; i < animation.length; i++) {\n      a = animation[i][0];\n      b = animation[i][1];\n      for(let j=0; j<=this.checkthis(arr,checker); j++){\n        bararr[j].style.backgroundColor=\"green\";\n      }\n      setTimeout(() => {\n        a = animation[i][0];\n        b = animation[i][1];\n        h1 = arr[a];\n        h2 = arr[b];\n        // this.setState({ ...arr});\n        // console.log(a,b);\n        // console.log(bararr[a].style.backgroundColor);\n        bararr[b].style.height=`${h1}px`;\n        bararr[a].style.height=`${h2}px`;\n        bararr[b].style.backgroundColor=\"blue\";\n        bararr[a].style.backgroundColor=\"blue\";\n        if(animation[i].length==3)\n        bararr[animation[i][2]].style.backgroundColor=\"green\";\n        [arr[a], arr[b]] = [arr[b], arr[a]];\n        if(i!=0){\n          a = animation[i-1][0];\n        b = animation[i-1][1];\n        bararr[b].style.backgroundColor=\"red\";\n        bararr[a].style.backgroundColor=\"red\";\n        }\n\n        // console.log(h2);\n      }, (i) * 50);\n    }\n    \n  \n    // console.log(document.getElementsByClassName(\"bars\"));\n  }\n\n  // Calling The algorithms\n  bubbleSort() {\n    let arr = this.state.arr.slice(); //Getting a new array\n    const animation = BubbleSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  insertionSort() {\n    let arr = this.state.arr.slice();\n    const animation = InsertionSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  quickSort() {\n    let arr = this.state.arr.slice();\n    const animation = QuickSort(arr);\n    this.AnimateSort(animation);\n  }\n\n  //All the components that are being rendered\n  render() {\n\n    const barsheight = this.state.arr.map((val, inx) => {\n      return <Bars height={val} key={inx} class=\"bars\"/>;\n    });\n\n    return (\n      <div>\n        <div className=\"bars-container\">{barsheight}</div>\n        <button\n          onClick={() => {\n            this.bubbleSort();\n          }}\n        >\n          Bubble Sort\n        </button>\n        <button\n          onClick={() => {\n            this.insertionSort();\n          }}\n        >\n          Insertion Sort\n        </button>\n        <button\n          onClick={() => {\n            this.quickSort();\n          }}\n        >\n          Quick Sort\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}